<template>
  <div class="wrap">
    <p class="box"></p>
    <h3 class="title">投保险种</h3>
    <ul class="content" v-for="item in productList" :key="item.id">
      <li class="son1">
        <span>首期总保费(年交)</span>
        <span>
          <span> {{ item.premium | global_addCommas }} </span>元
        </span>
      </li>
      <li>
        <p @click="isShow = !isShow" class="bar">
          <span>{{ item.productName }}</span>
          <span>
            <span>{{ item.premiumDes | global_addCommas }} </span>元
            <img
              v-if="isShow == false"
              src="../../assets/imgs/common/icon/icon_pull_down.png"
              style="padding-left:10px"
            />
            <img
              v-if="isShow == true"
              src="../../assets/imgs/common/icon/icon_pull_up.png"
              style="padding-left:10px"
            />
          </span>
        </p>
        <div v-show="isShow">
          <p>
            <span>
              <b>保险期: </b>
              <span>{{ getpolicyPeriod(item.policyPeriod) }}</span>
            </span>
            <span>
              <b>险种保额:</b>
              <span v-if="item.amout">{{
                item.amount | global_addCommas
              }}</span>
            </span>
          </p>
          <p>
            <span>
              <b>缴费期:</b>
              <span v-if="item.payPeriod">{{
                getpayPeriod(item.payPeriod)
              }}</span>
            </span>
            <span>
              <b> 交费频率:</b>
              <span v-if="item.payMode">{{ getpayMode(item.payMode) }}</span>
            </span>
          </p>
          <p>
            <span>
              <b>保险计划:</b>
              <span v-if="item.rank"> {{ getrank(item.rank) }}</span>
            </span>
            <span>
              <b>被保险人类型:</b>
              <span v-if="item.grade">{{ getArrtext(item.grade) }}</span></span
            >
          </p>
          <p>
            <span>
              <b>领取方式:</b>
              <span v-if="item.drawMode">
                {{ getdrawMode(item.drawMode) }}
              </span>
            </span>
            <span>
              <b>年金开始领取频率年龄:</b>
              <span>{{ getdrawStartAge(item.drawStartAge) }}</span>
            </span>
          </p>
          <p>
            <span>
              <b>年金开始领取频率:</b>
              <span>
                {{ getdrawFreq(item.drawFreq) }}
              </span>
            </span>
          </p>
        </div>
      </li>
    </ul>
  </div>
</template>

<script>
export default {
  data() {
    return {
      isShow: false,
      premiumList: [], //交费频率
      pickupmethodList: [] //红利领取方式
    };
  },
  props: ["productList"],
  created() {},
  methods: {
    //过滤码表字段
    //得到被保险人类型
    getArrtext(grade) {
      if (grade == "" || grade == undefined || grade == "") {
        return "";
      } else {
        let arr = this.productList[0].attList.filter(item => {
          return item.attValue == grade;
        });
        return arr[0].attText;
      }
    },
    getpolicyPeriod(policyPeriod) {
      if (
        policyPeriod == "" ||
        policyPeriod == undefined ||
        policyPeriod == ""
      ) {
        return "";
      } else {
        let arr = this.productList[0].attList.filter(item => {
          return item.attValue == policyPeriod;
        });
        return arr[0].attText;
      }
    },
    getpayPeriod(payPeriod) {
      if (payPeriod == "" || payPeriod == undefined || payPeriod == "") {
        return "";
      } else {
        let arr = this.productList[0].attList.filter(item => {
          return item.attValue == payPeriod;
        });
        return arr[0].attText;
      }
    },
    getdrawMode(drawMode) {
      if (drawMode == "" || drawMode == undefined || drawMode == "") {
        return "";
      } else {
        let arr = this.productList[0].attList.filter(item => {
          return item.attValue == drawMode;
        });
        return arr[0].attText;
      }
    },
    getpayMode(payMode) {
      if (payMode == "" || payMode == undefined || payMode == "") {
        return "";
      } else {
        let arr = this.productList[0].attList.filter(item => {
          return item.attValue == payMode;
        });
        return arr[0].attText;
      }
    },
    getrank(rank) {
      if (rank == "" || rank == undefined || rank == "") {
        return "";
      } else {
        let arr = this.productList[0].attList.filter(item => {
          return item.attValue == rank;
        });
        return arr[0].attText;
      }
    },
    getdrawStartAge(drawStartAge) {
      if (
        drawStartAge == "" ||
        drawStartAge == undefined ||
        drawStartAge == ""
      ) {
        return "";
      } else {
        let arr = this.productList[0].attList.filter(item => {
          return item.attValue == drawStartAge;
        });
        return arr[0].attText;
      }
    },
    getdrawFreq(drawFreq) {
      if (drawFreq == "" || drawFreq == undefined || drawFreq == "") {
        return "";
      } else {
        let arr = this.productList[0].attList.filter(item => {
          return item.attValue == drawFreq;
        });
        return arr[0].attText;
      }
    }
  }
};
</script>

<style lang="scss" scoped>
ul li {
  list-style: none;
  line-height: 30px;
  padding: 3px 0px;
  div {
    padding-left: 8px;
    font-size: 13px;
    color: #333333;
    letter-spacing: 0;
    p {
      width: 100%;
      height: 100%;
      display: flex;
      padding-left: 8px;
      span {
        flex: 1;
        i {
          font-family: HYQiHei-DES;
          font-size: 13px;
          color: #666666;
          letter-spacing: 0;
          line-height: 25px;
        }
      }
    }
  }
  .bar {
    background: #f3f3f3;
    border-radius: 5px;
    font-size: 13px;
    color: #333333;
    padding: 0px 15px;
    letter-spacing: 0;
    display: flex;
    :first-child {
      flex: 8;
    }
    :last-child {
      span {
        font-size: 15px;
        color: #eb5656;
      }
    }
  }
}
.wrap {
  margin: 0 auto;
  margin-bottom: 12.5px;
  width: 345px;
  background: #ffffff;
  border-radius: 3px;
  font-family: HYQiHei-DES;
  position: relative;
  .box {
    width: 3px;
    height: 15px;
    float: left;
    background: #eb5656;
    border-radius: 8px;
    position: absolute;
    top: 18px;
    left: 20px;
  }
  .title {
    height: 47.5px;
    width: 100%;
    line-height: 47.5px;
    float: left;
    border-bottom: 1px solid #cccccc;
    font-size: 16px;
    color: #333333;
    letter-spacing: 0;
    padding: 0px 35px;
  }
  .content {
    text-align: left;
    .son1 {
      font-size: 15px;
      color: #333333;
      letter-spacing: 0;
      display: flex;
      padding: 0px 15px;
      font-weight: 550;
      :first-child {
        flex: 8;
      }
      :last-child {
        span {
          font-size: 15px;
          color: #eb5656;
          text-align: right;
        }
      }
    }
  }
}
</style>
