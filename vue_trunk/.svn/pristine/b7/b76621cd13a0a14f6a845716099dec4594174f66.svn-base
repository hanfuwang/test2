/* ------------------------------------------ 规划书模块 ------------------------------------------ */

//state：状态
const state = {
  //被保人
  insurant: {
    name: "",
    sex: "0",
    birthdate: "",
    occupation: "",
    isoldCustomer: "0" //默认是新客户
  },
  //投保人信息
  applicant: {
    name: "",
    sex: "0", //性别
    birthdate: "",
    //职业信息
    job: {
      occupationCode: "",
      occupationLevel: "",
      occupationName: "",
      occupationRiskLevel: "",
      occupationRiskMetical: ""
    },
    holderRelation: "", //关系
    isoldCustomer: "0" //默认是新客户
  },
  mainProposalProductList: [], //主险种列表
  riskProposalProductList: [], //附加险种列表
  totalPremium: "" //总保费
};

//getters：类似于state的计算属性
//接收参数：state
const getters = {};

//mutations：改变state的唯一途径，里面的操作必须是同步的，否则会导致变化无法追踪
//接收参数，state，载荷payload对象
const mutations = {
  setState(state, payload) {
    state[payload.attr] = payload.data;
  }
};

//actions：用于异步地提交一个或多个mutations，常与Promise联合使用
//接收参数：context对象(一个与 当前模块store 实例具有相同方法和属性的 context 对象)，载荷payload对象
const actions = {};

const plan = {
  namespaced: true,
  state,
  getters,
  mutations,
  actions
};
export default plan;
